"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Finds an ImportDeclaration for a given identifier (name).
 *
 * For instance, given this source file:
 *
 *     import { SomeClass1, SomeClass2 } from './somewhere';
 *     import { SomeClass3 } from './somewhere-else';
 *
 *     // ...
 *
 * And a call such as:
 *
 *     findImportForIdentifier( sourceFile, 'SomeClass3' );
 *
 * Then the second ImportDeclaration will be returned.
 */
function findImportForIdentifier(sourceFile, identifier) {
    return sourceFile
        .getImportDeclarations()
        .find((importDeclaration) => {
        const hasNamedImport = importDeclaration.getNamedImports()
            .map((namedImport) => namedImport.getName())
            .includes(identifier);
        const defaultImport = importDeclaration.getDefaultImport();
        const hasDefaultImport = !!defaultImport && defaultImport.getText() === identifier;
        return hasNamedImport || hasDefaultImport;
    });
}
exports.findImportForIdentifier = findImportForIdentifier;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmluZC1pbXBvcnQtZm9yLWlkZW50aWZpZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdXRpbC9maW5kLWltcG9ydC1mb3ItaWRlbnRpZmllci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUVBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUNILGlDQUNDLFVBQXNCLEVBQ3RCLFVBQWtCO0lBRWxCLE9BQU8sVUFBVTtTQUNmLHFCQUFxQixFQUFFO1NBQ3ZCLElBQUksQ0FBRSxDQUFFLGlCQUFvQyxFQUFHLEVBQUU7UUFDakQsTUFBTSxjQUFjLEdBQUcsaUJBQWlCLENBQUMsZUFBZSxFQUFFO2FBQ3hELEdBQUcsQ0FBRSxDQUFFLFdBQTRCLEVBQUcsRUFBRSxDQUFDLFdBQVcsQ0FBQyxPQUFPLEVBQUUsQ0FBRTthQUNoRSxRQUFRLENBQUUsVUFBVSxDQUFFLENBQUM7UUFFekIsTUFBTSxhQUFhLEdBQUcsaUJBQWlCLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztRQUMzRCxNQUFNLGdCQUFnQixHQUFHLENBQUMsQ0FBQyxhQUFhLElBQUksYUFBYSxDQUFDLE9BQU8sRUFBRSxLQUFLLFVBQVUsQ0FBQztRQUVuRixPQUFPLGNBQWMsSUFBSSxnQkFBZ0IsQ0FBQztJQUMzQyxDQUFDLENBQUUsQ0FBQztBQUNOLENBQUM7QUFoQkQsMERBZ0JDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW1wb3J0RGVjbGFyYXRpb24sIEltcG9ydFNwZWNpZmllciwgU291cmNlRmlsZSB9IGZyb20gXCJ0cy1tb3JwaFwiO1xuXG4vKipcbiAqIEZpbmRzIGFuIEltcG9ydERlY2xhcmF0aW9uIGZvciBhIGdpdmVuIGlkZW50aWZpZXIgKG5hbWUpLlxuICpcbiAqIEZvciBpbnN0YW5jZSwgZ2l2ZW4gdGhpcyBzb3VyY2UgZmlsZTpcbiAqXG4gKiAgICAgaW1wb3J0IHsgU29tZUNsYXNzMSwgU29tZUNsYXNzMiB9IGZyb20gJy4vc29tZXdoZXJlJztcbiAqICAgICBpbXBvcnQgeyBTb21lQ2xhc3MzIH0gZnJvbSAnLi9zb21ld2hlcmUtZWxzZSc7XG4gKlxuICogICAgIC8vIC4uLlxuICpcbiAqIEFuZCBhIGNhbGwgc3VjaCBhczpcbiAqXG4gKiAgICAgZmluZEltcG9ydEZvcklkZW50aWZpZXIoIHNvdXJjZUZpbGUsICdTb21lQ2xhc3MzJyApO1xuICpcbiAqIFRoZW4gdGhlIHNlY29uZCBJbXBvcnREZWNsYXJhdGlvbiB3aWxsIGJlIHJldHVybmVkLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZmluZEltcG9ydEZvcklkZW50aWZpZXIoXG5cdHNvdXJjZUZpbGU6IFNvdXJjZUZpbGUsXG5cdGlkZW50aWZpZXI6IHN0cmluZ1xuKTogSW1wb3J0RGVjbGFyYXRpb24gfCB1bmRlZmluZWQge1xuXHRyZXR1cm4gc291cmNlRmlsZVxuXHRcdC5nZXRJbXBvcnREZWNsYXJhdGlvbnMoKVxuXHRcdC5maW5kKCAoIGltcG9ydERlY2xhcmF0aW9uOiBJbXBvcnREZWNsYXJhdGlvbiApID0+IHtcblx0XHRcdGNvbnN0IGhhc05hbWVkSW1wb3J0ID0gaW1wb3J0RGVjbGFyYXRpb24uZ2V0TmFtZWRJbXBvcnRzKClcblx0XHRcdFx0Lm1hcCggKCBuYW1lZEltcG9ydDogSW1wb3J0U3BlY2lmaWVyICkgPT4gbmFtZWRJbXBvcnQuZ2V0TmFtZSgpIClcblx0XHRcdFx0LmluY2x1ZGVzKCBpZGVudGlmaWVyICk7XG5cblx0XHRcdGNvbnN0IGRlZmF1bHRJbXBvcnQgPSBpbXBvcnREZWNsYXJhdGlvbi5nZXREZWZhdWx0SW1wb3J0KCk7XG5cdFx0XHRjb25zdCBoYXNEZWZhdWx0SW1wb3J0ID0gISFkZWZhdWx0SW1wb3J0ICYmIGRlZmF1bHRJbXBvcnQuZ2V0VGV4dCgpID09PSBpZGVudGlmaWVyO1xuXG5cdFx0XHRyZXR1cm4gaGFzTmFtZWRJbXBvcnQgfHwgaGFzRGVmYXVsdEltcG9ydDtcblx0XHR9ICk7XG59Il19